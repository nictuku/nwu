<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<article>
  <title>Network Wide Updates - NWU - User Manual</title>

  <articleinfo>
    <abstract>
      <para>This document is a step-by-step howto for installing NWU,
      automatic updates manager for systems that use APT</para>
    </abstract>

    <releaseinfo>0.1</releaseinfo>

    <author>
      <firstname>Yves</firstname>

      <surname>Junqueira <ulink
      url="http://cetico.org/nwu">http://cetico.org</ulink></surname>
    </author>

    <copyright>
      <year>2006</year>

      <holder>Yves Junqueira</holder>
    </copyright>
  </articleinfo>

  <section>
    <title>About NWU</title>

    <para>NWU helps managing a network of Debian-like computers by making
    package management as automatic as possible. You would install the server
    component in a central location and nwu-agent in every computer, then
    enjoin an up to date environment. You will be able to list, install,
    upgrade or remove any package in your systems. For more information, see
    <ulink url="http://cetico.org/nwu">http://cetico.org/nwu</ulink>.</para>
  </section>

  <section id="setup_rep">
    <title>APT repositories setup</title>

    <para>NWU can be installed by using APT repositories. Depending on which
    distribution of Debian you're using, add one of the following lines to
    your /etc/apt/sources.list:</para>

    <para>Debian 3.1 (Sarge), Ubuntu 6.06 (Dapper) or 6.10 (Edgy):</para>

    <para><userinput>deb http://cetico.org/debian_old</userinput></para>

    <para>Debian 4.0 (Etch):</para>

    <para><userinput>deb http://cetico.org/debian</userinput></para>

    <para><command>aptitude update</command></para>
  </section>

  <section>
    <title>Server Installation</title>

    <para><command>aptitude install nwu-server</command></para>

    <para><command>vi
    /etc/default/nwu-server</command><userinput></userinput></para>

    <para><userinput>NO_START=0</userinput></para>

    <para>Now change /etc/nwu/server.conf to suit your needs. The default
    values work, but please start reading the next section too.</para>

    <para>Sample config:</para>

    <programlisting>[webservice]
host = 0.0.0.0 
port = 8088

[database]
type = sqlite
host =
database = /var/lib/nwu/nwu.db
user = 
password =</programlisting>

    <section>
      <title>Database config</title>

      <para><citetitle>If you are in a hurry, skip this section and just run
      "nwu-server -i" as root and you'll be using SQLite as your
      backend.</citetitle></para>

      <para>In order to use nwu-server you need a database backend compatible
      with python sqlobject (MySQL, PostgreSQL, SQLite). SQLite is nice and
      simple, but it may not perform well. It's a very good option for testing
      and for networks with just a few nodes. If your network is big and many
      clients would connect at the same time, PostgreSQL and MySQL are better
      options. NWU tries very hard to be efficient using the database, so your
      mileage may vary.</para>

      <para>If you want to use MySQL or PostgreSQL, choose one of the
      following options:</para>

      <para>A) MySQL</para>

      <para>Create database (type your root mysql password):</para>

      <para><command>mysql -uroot -p -e</command> <userinput>'CREATE DATABASE
      nwu;'</userinput></para>

      <para>Create user:</para>

      <para><command>mysql -uroot -p -e</command> <userinput>'GRANT ALL
      PRIVILEGES ON nwu.* TO 'nwu'@'%' IDENTIFIED BY 'YOURPASSWORD' WITH GRANT
      OPTION;'</userinput></para>

      <para>Create tables:</para>

      <para><command>nwu-server -i</command></para>

      <para>B) PostgreSQL</para>

      <para><command>sudo -u postgres createuser nwu</command></para>

      <para><command>sudo -u postgres createdb nwu</command></para>

      <para><command>sudo -u postgres psql nwu &lt;&lt; EOF</command></para>

      <para><userinput>ALTER DATABASE nwu OWNER TO nwu \q
      EOF</userinput></para>

      <para>Create tables:</para>

      <para><command>nwu-server -i</command></para>
    </section>

    <section id="setup_cert">
      <title>SSL certificates creation</title>

      <para>In the current version of NWU, the agent must have a copy of a
      shared CA certificate, which will be one that issues the server
      certificate. This maybe change in the future. If you don't have the
      openssl package installed, please do install it before proceeding. It's
      a boring task, but you only have to do it once.</para>

      <para>- Create a Certificate Authority (CA):<command></command></para>

      <para><programlisting><command>cd /var/tmp
/usr/lib/ssl/misc/CA.pl -newca</command>
CA certificate filename (or enter to create)
<userinput>&lt;type enter&gt;</userinput>
Making CA certificate ...
Generating a 1024 bit RSA private key
..................++++++
......++++++
writing new private key to './demoCA/private/cakey.pem'
Enter PEM pass phrase:<userinput>&lt;type a password&gt;</userinput>
Verifying - Enter PEM pass phrase:<userinput>&lt;repeat&gt;</userinput>
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:<userinput>&lt;enter this and the next questions aproprietly&gt;</userinput>
State or Province Name (full name) [Some-State]:<userinput>Distrito Federal</userinput>
Locality Name (eg, city) []:<userinput>Brasilia</userinput>
Organization Name (eg, company) [Internet Widgits Pty Ltd]:<userinput>cetico.org</userinput>
Organizational Unit Name (eg, section) []: 
Common Name (eg, YOUR name) []:<userinput>&lt;fully qualified hostname for this server&gt;</userinput>
Email Address []:

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:<userinput>&lt;YOU MAY IGNORE THIS&gt;</userinput>
An optional company name []:<userinput>&lt;THIS TOO&gt;</userinput>
Using configuration from /usr/lib/ssl/openssl.cnf
Enter pass phrase for ./demoCA/private/cakey.pem:<userinput>&lt;TYPE HERE THE PASSWORD YOU DEFINED FOR cakey.pem&gt;</userinput>
Check that the request matches the signature
Signature ok
(etc..)
</programlisting></para>

      <para><command></command>- Generate a Certificate Request. Fill in valid
      information as before, and <emphasis role="bold">pay strict attention to
      the commonName field</emphasis> - it must be the FQDN for the server, or
      the full hostname your clients will use to connect to this server (e.g:
      <emphasis>myserver.mycorp.somewhere</emphasis>, with the domain
      part).</para>

      <para><command></command><programlisting><command>/usr/lib/ssl/misc/CA.pl -newreq</command>
Generating a 1024 bit RSA private key
.................++++++
.++++++
writing new private key to 'newkey.pem'
Enter PEM pass phrase:<userinput>&lt;enter a temporary password here&gt;</userinput><footnote>
            <para>If your organization policy says so, you can use this password and make nwu-server ask for it interactively. If that is the case, skip the next step for removing the password from the priv key.</para>
          </footnote>
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:<userinput>BR</userinput>
State or Province Name (full name) [Some-State]:<userinput>Distrito Federal</userinput>
Locality Name (eg, city) []:<userinput>Brasilia</userinput>
Organization Name (eg, company) [Internet Widgits Pty Ltd]:<userinput>cetico.org</userinput>
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:<userinput>server883.cetico.org</userinput>
Email Address []:<userinput>yves..@..cetico.org</userinput>

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:<userinput>&lt;you can leave this blank&gt;</userinput>
An optional company name []:<userinput>&lt;again&gt;</userinput>
Request is in newreq.pem, private key is in newkey.pem
</programlisting></para>

      <para>- Remove the passphrase from the key:</para>

      <para><programlisting><command>cp newkey.pem newkey.pem.orig
openssl rsa -in newkey.pem.orig -out newkey.pem</command>
Enter pass phrase for newkey.pem.orig:<userinput>&lt;type here the password for newkey.pem you set earlier&gt;</userinput>
writing RSA key
</programlisting></para>

      <para>- Sign the certificate using the CA certificate:</para>

      <para><programlisting><command>yves@elvis:/var/tmp$ /usr/lib/ssl/misc/CA.pl -sign</command>
Using configuration from /usr/lib/ssl/openssl.cnf
Enter pass phrase for ./demoCA/private/cakey.pem:<userinput>&lt;type here the password you set earlier for the CA&gt;</userinput>
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number:
            a7:4a:d7:67:db:a1:23:ef
        Validity
            Not Before: Oct 10 03:44:00 2006 GMT
            Not After : Oct 10 03:44:00 2007 GMT
        Subject:
            countryName               = BR
            stateOrProvinceName       = Distrito Federal
            localityName              = Brasilia
            organizationName          = cetico.org
            commonName                = server883.cetico.org
            emailAddress              = yves@cetico.org
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Comment: 
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier: 
                4A:AD:26:D5:89:AB:FB:87:A6:36:D8:F8:24:55:37:75:E1:6B:DE:76
            X509v3 Authority Key Identifier: 
                keyid:9D:89:E3:C6:EF:D8:49:87:DD:CF:34:32:C6:27:17:84:DC:6E:AA:8E

Certificate is to be certified until Oct 10 03:44:00 2007 GMT (365 days)
Sign the certificate? [y/n]:<userinput>y</userinput>


1 out of 1 certificate requests certified, commit? [y/n]<userinput>y</userinput>
Write out database with 1 new entries
Data Base Updated
Signed certificate is in newcert.pem
</programlisting></para>

      <para>- Move the certificate and keys to a safe place:</para>

      <para><command>sudo cp demoCA/cacert.pem /etc/nwu/</command></para>

      <para><command>sudo cp newcert.pem /etc/nwu/server.pem</command></para>

      <para><command>sudo cat newkey.pem &gt;&gt;
      /etc/nwu/server.pem</command></para>

      <para><command>sudo chown nwuserver.nwuserver
      /etc/nwu/server.pem</command></para>

      <para><command>sudo chmod 660 /etc/nwu/server.pem</command></para>

      <para>When you are sure everything was copied:</para>

      <para><command>sudo mv demoCA /etc/nwu/</command></para>

      <para><command>sudo chmod 600 /etc/nwu/demoCA -R</command></para>

      <para><command>rm new*pem</command></para>
    </section>

    <section>
      <title>Run it!</title>

      <para>Cross your fingers and start the server:</para>

      <para><command>/etc/init.d/nwu-server start</command></para>

      <para>See in the syslog if everything is running fine. Now let's install
      the <link linkend="setup_agents">agent</link> somewhere - or even in the
      same machine you installed the server, no problem with that.</para>
    </section>

    <section>
      <title>Troubleshooting the server</title>

      <para>It's easy to troubleshoot the server in case you run into
      troubles. You can play with the paramaters for nwu-server. First, stop
      the server if it's running, then call:</para>

      <para><command>sudo -u nwuserver nwu-server -f -l DEBUG</command></para>

      <para>The server will remain in the foreground, dumping diagnostic
      messages. If you need, ask for help in the <ulink
      url="http://cetico.org/nwu">mailing list</ulink>.</para>
    </section>
  </section>

  <section id="setup_agents">
    <title>Agents Installation</title>

    <para>First, configure the APT repositories as explained <link
    linkend="setup_rep">before</link>. Then install the agent package:</para>

    <para><command>apt-get install nwu-agent</command></para>

    <para>This will also install <emphasis>python-sysinfo</emphasis>, which is
    a abstraction layer to collect system information. Next, a debconf
    question will ask the URL used for connecting to the server. Specify it in
    the format <emphasis>https://domain.tld:8088</emphasis>, using the
    hostname of exactly as specified when creating the <link
    linkend="setup_cert">server certificate</link>.</para>

    <para><inlinemediaobject>
        <imageobject>
          <imagedata fileref="nwuagent_debconf.png" />
        </imageobject>
      </inlinemediaobject></para>

    <para>Finally, you must copy the <filename>cacert.pem</filename> from the
    server to each machine at <filename>/etc/nwu/cacert.pem</filename>:</para>

    <para><command># sudo scp boogie@cetico.org:/etc/nwu/cacert.pem
    /etc/nwu/cacert.pem</command></para>
  </section>

  <section>
    <title>Operation</title>

    <para>First of all, how does nwu-agent work? The first time the nwu-agent
    is run, it will generate its auth information and save it on
    /var/spool/nwu/, then load system information - including current APT
    state and send that to the server. The agents will push and pull data to
    the servers every 10 minutes. They notify the server of the changes (eg:
    "package 'foo' installed") then get the list of pending tasks.</para>

    <para>You can then manage NWU using the nwu CLI tool from the server you
    installed nwu-server. Type 'nwu help' to get list of options. You can
    either run it as <emphasis>root</emphasis> or someone in the
    <emphasis>nwuserver</emphasis> group, which has privilege to read
    <filename>/etc/nwu/server.conf</filename>.</para>

    <para><command>$ nwu help</command> <programlisting>Usage: nwu &lt;sub-command&gt; &lt;options&gt; [arguments]
Command line manager for NWU, version 0.1.5.

Available sub-commands:

  addrep  &lt;computer&gt; &lt;repository uri&gt;  : Add new repository
  adduser &lt;name&gt; &lt;level:0|1&gt;     : Add a new user, admin or not
  forceinstall &lt;computer&gt; &lt;packages&gt;  : Install defined packages in the computer (force)
  help                           : This help message
  install &lt;computer&gt; &lt;packages&gt;  : Install defined packages in the computer
  list    [group]                : Lists all computers or specified group
  update &lt;computer&gt;             : Update packages list
  upgrade &lt;computer&gt;             : Upgrade all packages in the computer
  view    &lt;computer&gt; &lt;info&gt;      : View computer informations

Available groups for list command:

    outdated
</programlisting></para>

    <para>The first command you should try is 'list':</para>

    <para><command>$ nwu list</command></para>

    <para><computeroutput>1 elvis Linux "QY4PRLHPY39WUQXQRZLR22O2W4ML4W43"
    </computeroutput></para>

    <para>In this case we have only one agent installed. The line is showing
    its id, its hostname, OS and the unique used internally to identify each
    machine, and works as the 'username' of each computer. You can ignore
    it.</para>

    <para>You can ask a list of outdated machines:</para>

    <para><command>$ nwu list outdated</command></para>

    <para><computeroutput>elvis[1] </computeroutput></para>

    <para>Hmm we better give elvis an upgrade:</para>

    <para><command>$ nwu upgrade 1</command></para>

    <para><computeroutput>Found computer id=1 in the database. Requesting
    upgrade.</computeroutput></para>

    <para>Then there is 'view', which</para>

    <para><command>$ nwu view 1 packages</command><programlisting>Reading current packages in computer elvis[1]
alacarte                                     0.10.0-0ubuntu1
app-install-data                             0.2.11
apport                                       0.19
apport-gtk                                   0.19</programlisting></para>

    <para>.. etc etc (todo)</para>
  </section>
</article>